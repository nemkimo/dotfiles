vim.g.mapleader = " "
vim.api.nvim_set_keymap("", "0", "^", { noremap = true, silent = true })

vim.keymap.set("n", "<leader>dp", vim.diagnostic.open_float, { desc = "Popup" })
vim.keymap.set("n", "<leader>d,", vim.diagnostic.get_prev, { desc = "Prev" })
vim.keymap.set("n", "<leader>d.", vim.diagnostic.get_next, { desc = "Next" })
vim.keymap.set("n", "<leader>dl", vim.diagnostic.setloclist, { desc = "List" })

vim.keymap.set("n", "<leader>lD", vim.lsp.buf.declaration, { desc = "Go to declaration" })
vim.keymap.set("n", "<leader>ld", vim.lsp.buf.definition, { desc = "Go to definition" })
vim.keymap.set("n", "<leader>lh", vim.lsp.buf.hover, { desc = "Hover" })
vim.keymap.set("n", "<leader>li", vim.lsp.buf.implementation, { desc = "Go to implementation" })
vim.keymap.set("n", "<leader>ls", vim.lsp.buf.signature_help, { desc = "Signature" })
vim.keymap.set("n", "<leader>wa", vim.lsp.buf.add_workspace_folder, { desc = "Add workspace folder" })
vim.keymap.set("n", "<leader>wr", vim.lsp.buf.remove_workspace_folder, { desc = "Remove workspace folder" })
vim.keymap.set("n", "<leader>wl", function()
  print(vim.inspect(vim.lsp.buf.list_workspace_folders()))
end, { desc = "List workspace folders" })
vim.keymap.set("n", "<leader>lt", vim.lsp.buf.type_definition, { desc = "Type definition" })
vim.keymap.set("n", "<leader>ln", vim.lsp.buf.rename, { desc = "Rename" })
vim.keymap.set({ "n", "v" }, "<leader>da", vim.lsp.buf.code_action, { desc = "Action" })
vim.keymap.set("n", "<leader>lr", vim.lsp.buf.references, { desc = "References" })
vim.keymap.set("n", "<leader>lf", function()
  vim.lsp.buf.format({ async = true })
end, { desc = "Format" })
